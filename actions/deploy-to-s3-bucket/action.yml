---

name: 'Deploy to s3 bucket'
description: 'Deploys assets to an s3 bucket'

inputs:
  pattern:
    description: |
      If downloading release assets from github, the pattern for the assets file.
      Otherwise, the path to the assets.  If it is an archive, it will unpacked.
    required: true

  # GH release Options
  github-token:
    description: 'The github token to allow for searching for release assets'
    default: ${{ github.token }}
  tag:
    description: 'The github release tag to pull that assets from'
    default: ''

  s3-bucket:
    description: 'The name of the s3 bucket to upload the assets to'
    required: true
  s3-bucket-path:
    description: 'The path within the s3 bucket to upload the assets to'
    default: ''
  s3-tags:
    description: |
      Key value pairs to attach to each s3 object.

      Example:
        s3-tags: |
          version=v1
          owner=carl
    default: ''

  cache-control:
    description: 'Sets the cache-control headers for the content being uploaded'
    default: ''

runs:
  using: 'composite'
  steps:
    - name: 'Download release assets'
      shell: bash
      run: gh -R "${{ github.repository }}" release download -p "${{ inputs.pattern }}" "${{ inputs.tag }}"
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      # Only if we are downloading assets from gh release
      if: inputs.tag != ''

    - name: 'Unpack assets'
      id: unpack
      uses: shopsmart/github-actions/actions/unpack-archive@v4
      with:
        filename: ${{ inputs.pattern }}
        destination: assets

    - name: 'Upload assets'
      shell: bash
      run: ${{ github.action_path }}/upload-assets.sh "${{ steps.unpack.outputs.destination }}"
      env:
        S3_BUCKET: ${{ inputs.s3-bucket }}
        S3_BUCKET_PATH: ${{ inputs.s3-bucket-path }}
        CACHE_CONTROL: ${{ inputs.cache-control }}

    - name: 'Tag assets'
      shell: bash
      run: ${{ github.action_path }}/tag-assets.sh "${{ steps.unpack.outputs.destination }}"
      env:
        S3_BUCKET: ${{ inputs.s3-bucket }}
        S3_BUCKET_PATH: ${{ inputs.s3-bucket-path }}
        S3_TAGS: ${{ inputs.s3-tags }}
      if: inputs.s3-tags != ''
