---

name: 'Publish slack notification workflow'
description: 'Posts a slack message with the status of the pipeline'

inputs:
  application:
    description: 'The friendly name for the application'
    type: string
    required: true
  environment:
    description: 'The environment that is being targeted for this deployment'
    type: string
    required: true
  version:
    description: 'The version that is being deployed'
    type: string
    default: ${{ github.ref }}
  type:
    description: 'The type of action that is being performed such as build or deployment'
    type: string
    required: true
  status:
    description: 'The status of the deployment.  Options are started, success, and failure'
    type: string
    required: true
  webhook:
    description: 'The slack webhook url to post the message to'
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: 'Create data file'
      id: data
      env:
        APPLICATION: ${{ inputs.application }}
        ENVIRONMENT: ${{ inputs.environment }}
        VERSION: ${{ inputs.version }}
        TYPE: ${{ inputs.type }}
        STATUS: ${{ inputs.status }}
        ACTOR: ${{ github.actor }}
        RUN_ID: ${{ github.run_id }}
        REPOSITORY: ${{ github.repository }}
        REF: ${{ github.ref_name }}
        LINK: ${{ env.LINK }}
        EMOJI: ${{ env.EMOJI }}
        MESSAGE: ${{ env.MESSAGE }}
      run: |
        set -eo pipefail
        TIMESTAMP="$(date +%s)"
        {
          echo '{'
          echo '  "application": "'"$APPLICATION"'",'
          echo '  "environment": "'"$ENVIRONMENT"'",'
          echo '  "version": "'"$VERSION"'",'
          echo '  "type": "'"$TYPE"'",'
          echo '  "status": "'"$STATUS"'",'
          echo '  "repository": "'"$REPOSITORY"'",'
          echo '  "ref": "'"$REF"'",'
          echo '  "timestamp": "'"$TIMESTAMP"'",'
          echo '  "actor": "'"$ACTOR"'",'
          echo '  "run_id": "'"$RUN_ID"'",'

          LINK=''
          case "${{ env.ENVIRONMENT }}" in
            production )
              LINK='https://engagement.bradsdeals.com/healthcheck'
              ;;
            staging )
              LINK="https://engagement-${{ env.ENVIRONMENT }}.bradsdeals.com/healthcheck"
              ;;
            * )
              LINK="https://engagement-${{ env.ENVIRONMENT }}.bradsdeals.com/healthcheck"
              ;;
          esac

          echo '  "link": "'"$LINK"'",'

          EMOJI=''
          MESSAGE="A $TYPE for $APPLICATION:$VERSION to $ENVIRONMENT resulted in $STATUS"
          case "$STATUS" in
            success )
              EMOJI=large_green_circle
              ;;
            failure )
              EMOJI=red_circle
              ;;
            started )
              EMOJI=large_blue_circle
              MESSAGE="A $TYPE has been started for $APPLICATION:$VERSION to $ENVIRONMENT"
              ;;
            * )
              EMOJI=white_circle
              ;;
          esac

          echo '  "message": "'"$MESSAGE"'",'
          echo '  "emoji": "'"$EMOJI"'"'
          echo '}'
        } > data.json
        echo "file=$PWD/data.json" >> $GITHUB_OUTPUT
      shell: bash

    - name: 'Render payload'
      id: render
      uses: shopsmart/render-j2-action@v1
      with:
        template: ${{ github.action_path }}/message.json.j2
        data: ${{ steps.data.outputs.file }}
        format: json

    - name: 'Checkout'
      uses: actions/checkout@v3

    - name: 'Post message to slack'
      id: slack
      uses: slackapi/slack-github-action@v1
      with:
        payload: ${{ steps.render.outputs.content }}
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.webhook }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
