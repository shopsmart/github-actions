---

name: 'Validate pull request'

on:
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  pre-commit:
    name: 'Pre-commit check'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup node'
        uses: actions/setup-node@v4
        with:
          node-version-file: actions/create-datadog-downtime/.nvmrc
          cache: npm
          cache-dependency-path: actions/create-datadog-downtime/package-lock.json

      - name: 'Install dependencies'
        run: npm ci
        working-directory: actions/create-datadog-downtime

      - name: 'Run pre-commit'
        uses: pre-commit/action@v3.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: 'Run tests'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup Homebrew'
        uses: Homebrew/actions/setup-homebrew@master

      - name: 'Install bats'
        run: brew install bats-core

      - name: 'Run action tests'
        run: bats -r actions/*/*.bats

  node-tests:
    name: 'Run node unit tests'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        action:
          - create-datadog-downtime
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Setup node'
        uses: actions/setup-node@v4
        with:
          node-version-file: actions/${{ matrix.action }}/.nvmrc
          cache: npm
          cache-dependency-path: actions/${{ matrix.action }}/package-lock.json

      - name: 'Install dependencies'
        run: npm ci
        working-directory: actions/${{ matrix.action }}

      - name: 'Run tests'
        run: npm test
        working-directory: actions/${{ matrix.action }}
