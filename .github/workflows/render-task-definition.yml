---

name: 'Render task definition'

on:
  workflow_call:
    inputs:
      # custom options
      ref:
        description: 'The branch/sha/tag to render the task definition from'
        type: string
        default: ''
      artifact-name:
        description: 'The name of the artifact to upload'
        type: string
        default: task-definition

      # render-jinjanator-template options
      template:
        description: 'The path to the template file to render'
        type: string
        required: true
      data:
        description: 'The path to the file with data to pass to the render'
        type: string
        required: false
        default: ''
      format:
        description: 'The format the data file will be in'
        type: string
        required: false
        default: ''
      format-options:
        description: |
          The format options to pass to the render.  Each option should be in
          format OPTION=VALUE with one on each line.

          Example:
            format-options: |
              FOO=bar
              BAR=baz
        type: string
        required: false
        default: ''
      environment:
        description: |
          The environment variables to pass to the render.  Each environment
          variable should be in format VAR=VAL with one on each line.
          Example:
            environment: |
              FOO=bar
              BAR=baz
        type: string
        required: false
        default: ''
      undefined:
        description: 'If true, undefined variables will be used in templates (no error will be raised)'
        type: string
        required: false
        default: 'false'
      output:
        description: 'The name of the output file to write rendered contents to'
        type: string
        required: false
        default: 'task-definition.yml' # Changed default

      # setup-python options
      python-version:
        description: "Version range or exact version of Python or PyPy to use, using SemVer's version range syntax. Reads from .python-version if unset."
        type: string
        default: ''
      python-version-file:
        description: "File containing the Python version to use. Example: .python-version"
        type: string
        default: ''

      # python requirements options
      requirements-file:
        description: 'The requirements file to install dependencies from, if not set will assume that it should install . via pyproject.toml'
        type: string
        default: ''
      working-directory:
        description: 'The base directory where files will exist'
        type: string
        default: infra

      # aws options
      aws-region:
        description: 'The aws region where resources live'
        type: string
        default: us-east-1

    secrets:
      aws-account-id:
        description: 'The AWS account id that the ecr repository lives under'
        required: true
      ssh-private-key:
        description: 'An SSH private key to install for private dependencies'
        required: false

defaults:
  run:
    shell: bash

jobs:
  render-task-definition:
    name: 'Render task definition'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: 'Setup python'
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          python-version-file: ${{ inputs.python-version-file }}
          cache: pip

      - name: 'If ssh private key provided, setup ssh agent'
        id: ssh
        run: |
          has_key='false'
          [ -z "${{ secrets.ssh-private-key }}" ] || has_key='true'
          echo "has_key=$has_key" >> "$GITHUB_OUTPUT"

      # for private dependencies
      - name: 'Install SSH Key'
        if: steps.ssh.outputs.has_key == 'true'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ssh-private-key }}

      - name: 'Install python dependencies'
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -n "${{ inputs.requirements-file }}" ]; then
            pip install -r "${{ inputs.requirements-file }}"
          elif [ -f pyproject.toml ]; then
            pip install .
          fi

      - name: 'Render task definition'
        id: render
        uses: shopsmart/github-actions/actions/render-jinjanator-template@v3
        with:
          working-directory: ${{ inputs.working-directory }}
          template: ${{ inputs.template }}
          data: ${{ inputs.data }}
          format: ${{ inputs.format }}
          format-options: ${{ inputs.format-options }}
          environment: |
            TAG=${{ inputs.ref }}
            AWS_ACCOUNT_ID=${{ secrets.aws-account-id }}
            AWS_REGION=${{ inputs.aws-region }}
            ${{ inputs.environment }}
          undefined: ${{ inputs.undefined }}
          output: ${{ inputs.output }}

      - name: 'Upload task definition'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ steps.render.outputs.file }}
